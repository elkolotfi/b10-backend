server:
  port: 8092

spring:
  application:
    name: lims-patient-service
  profiles:
    active: development

  # Database configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/lims_db
    username: lims_user
    password: dev_password_123
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: LIMS-Patient-Pool
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate  # En production: validate
      default_schema: lims_patient
    show-sql: false  # true en développement
    open-in-view: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        default_schema: lims_patient
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        generate_statistics: false

  # Redis configuration pour le cache
  redis:
    host: localhost
    port: 6379
    password:
    timeout: 2000ms
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  # Cache configuration
  cache:
    type: redis
    redis:
      time-to-live: 300000 # 5 minutes

# Configuration de sécurité - Support multi-realms
security:
  oauth2:
    resourceserver:
      jwt:
        # Configuration pour les vérifications JWT multi-realms
        # Le décodeur sera configuré programmatiquement pour supporter plusieurs realms
        keycloak:
          base-url: http://auth.lims.local
          realms:
            - name: lims-admin
              issuer-uri: http://auth.lims.local/realms/lims-admin
              jwk-set-uri: http://auth.lims.local/realms/lims-admin/protocol/openid-connect/certs
            - name: lims-patient
              issuer-uri: http://auth.lims.local/realms/lims-patient
              jwk-set-uri: http://auth.lims.local/realms/lims-patient/protocol/openid-connect/certs
            - name: lims-staff
              issuer-uri: http://auth.lims.local/realms/lims-staff
              jwk-set-uri: http://auth.lims.local/realms/lims-staff/protocol/openid-connect/certs

# Configuration métier du service patient
lims:
  jwt:
    secrets:
      # IMPORTANT: Utiliser la MÊME clé que dans lims-auth-service
      # Cette clé doit être identique à celle utilisée pour signer les JWT
      admin: "G9/BrPDMezKO3cxercRPm7OtvRjWGOeONQCk7AjB6s+pttEuco8xcUEE6dT2IHNHix9aNk4i+c1N8CaTTp84WxCfZMCC/UVJABajwU4ToymMJ/9gT3uxMK5PqrJcCHNi2cUo3P9k+ZaBCqvqwcDZv6kY7mdaz6G5VmcWAU8+4OgZVZEssNvY2kTInV2Sz4JZzp4/N8aWGf6ml3C+q4I8l0Yk9qImvqnAeMX83Rxp3R+yLk2LvCuaYx1lEkSbkM2NbsN1W8ebtZwxMC0CpeLY57V7DocrjvK7v/pjHHUu27qad1JgLBhmoNy4LZX1rqLSKdYvjGQqQd8SU4vP311d9fY8rv47DLKjSPKkee4XTtrfTfH1fh3mnPjYl2NoZjCzr7KAHB3lKpk56rUlmXYbqqExOlDGmnXOrnCL5JRj3LWgwvw6sR73/CGsigxkZvks00QF48cSfJPgFT+TdZ4FyAxc9vC+MG5FDdSjG+wCgmJ/UYQ9MOdLhNGs2itMpf3mN/z81/JYbbDxrNWPah56Ybr8Y4DUykgfJLMgiK/nwME5/qwjzkfRpjEMBRaZbIJPy7N+NfdgIolVjdNj6eBNUHLlrerV2G5FcEkHTsYrTIFrhxxAI3gE3KI92pBPBXxKohXrvVt4nupaj9onnzfP/y5s5kQkNUomVQYMIbyUKGU="
      patient: "G9/BrPDMezKO3cxercRPm7OtvRjWGOeONQCk7AjB6s+pttEuco8xcUEE6dT2IHNHix9aNk4i+c1N8CaTTp84WxCfZMCC/UVJABajwU4ToymMJ/9gT3uxMK5PqrJcCHNi2cUo3P9k+ZaBCqvqwcDZv6kY7mdaz6G5VmcWAU8+4OgZVZEssNvY2kTInV2Sz4JZzp4/N8aWGf6ml3C+q4I8l0Yk9qImvqnAeMX83Rxp3R+yLk2LvCuaYx1lEkSbkM2NbsN1W8ebtZwxMC0CpeLY57V7DocrjvK7v/pjHHUu27qad1JgLBhmoNy4LZX1rqLSKdYvjGQqQd8SU4vP311d9fY8rv47DLKjSPKkee4XTtrfTfH1fh3mnPjYl2NoZjCzr7KAHB3lKpk56rUlmXYbqqExOlDGmnXOrnCL5JRj3LWgwvw6sR73/CGsigxkZvks00QF48cSfJPgFT+TdZ4FyAxc9vC+MG5FDdSjG+wCgmJ/UYQ9MOdLhNGs2itMpf3mN/z81/JYbbDxrNWP ah56Ybr8Y4DUykgfJLMgiK/nwME5/qwjzkfRpjEMBRaZbIJPy7N+NfdgIolVjdNj6eBNUHLlrerV2G5FcEkHTsYrTIFrhxxAI3gE3KI92pBPBXxKohXrvVt4nupaj9onnzfP/y5s5kQkNUomVQYMIbyUKGU="
      staff: "G9/BrPDMezKO3cxercRPm7OtvRjWGOeONQCk7AjB6s+pttEuco8xcUEE6dT2IHNHix9aNk4i+c1N8CaTTp84WxCfZMCC/UVJABajwU4ToymMJ/9gT3uxMK5PqrJcCHNi2cUo3P9k+ZaBCqvqwcDZv6kY7mdaz6G5VmcWAU8+4OgZVZEssNvY2kTInV2Sz4JZzp4/N8aWGf6ml3C+q4I8l0Yk9qImvqnAeMX83Rxp3R+yLk2LvCuaYx1lEkSbkM2NbsN1W8ebtZwxMC0CpeLY57V7DocrjvK7v/pjHHUu27qad1JgLBhmoNy4LZX1rqLSKdYvjGQqQd8SU4vP311d9fY8rv47DLKjSPKkee4XTtrfTfH1fh3mnPjYl2NoZjCzr7KAHB3lKpk56rUlmXYbqqExOlDGmnXOrnCL5JRj3LWgwvw6sR73/CGsigxkZvks00QF48cSfJPgFT+TdZ4FyAxc9vC+MG5FDdSjG+wCgmJ/UYQ9MOdLhNGs2itMpf3mN/z81/JYbbDxrNWPah56Ybr8Y4DUykgfJLMgiK/nwME5/qwjzkfRpjEMBRaZbIJPy7N+NfdgIolVjdNj6eBNUHLlrerV2G5FcEkHTsYrTIFrhxxAI3gE3KI92pBPBXxKohXrvVt4nupaj9onnzfP/y5s5kQkNUomVQYMIbyUKGU="
  patient:
    # Règles métier
    business-rules:
      max-contacts-par-type: 3
      max-adresses-par-type: 2
      max-assurances-par-patient: 5
      validation-email-obligatoire: true
      validation-telephone-obligatoire: false
      duree-conservation-audit-jours: 2555
      soft-delete-uniquement: true

    # Configuration audit
    audit:
      enabled: true
      log-all-access: true
      retention-days: 2555
      include-ip-address: true
      include-user-agent: true

    # Configuration sécurité spécifique
    security:
      # Définir quels types d'utilisateurs peuvent accéder aux données patients
      allowed-user-types:
        - ADMIN    # Admins système (realm lims-admin)
        - PATIENT  # Patients eux-mêmes (realm lims-patient)
        - STAFF    # Personnel laboratoire (realm lims-staff)

      # Permissions par type d'utilisateur
      permissions:
        ADMIN:
          - READ_ALL_PATIENTS
          - WRITE_ALL_PATIENTS
          - DELETE_PATIENTS
          - ADMIN_OPERATIONS
        PATIENT:
          - READ_OWN_DATA
          - UPDATE_OWN_CONTACT
        STAFF:
          - READ_PATIENTS_IN_LAB
          - WRITE_PATIENTS_IN_LAB
          - SCHEDULE_APPOINTMENTS

# Logging
logging:
  level:
    com.lims.patient: DEBUG
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
    root: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Monitoring et management
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      show-components: always
  metrics:
    export:
      prometheus:
        enabled: true
  info:
    env:
      enabled: true

# Configuration Swagger/OpenAPI
springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    config-url: /api-docs/swagger-config
    urls-primary-name: "Patient Service API"
    display-request-duration: true
    show-extensions: true
    show-common-extensions: true